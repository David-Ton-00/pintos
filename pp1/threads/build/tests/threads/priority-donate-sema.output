Writing command line to /tmp/zn4wpZgEHb.dsk...
qemu -hda /tmp/zn4wpZgEHb.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q run priority-donate-sema
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  104,755,200 loops/s.
Boot complete.
Executing 'priority-donate-sema':
(priority-donate-sema) begin
(priority-donate-sema) Thread L acquired lock.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01084c7
 cr2=00000018 error=00000000
 eax=00000000 ebx=c0117030 ecx=00000005 edx=00000024
 esi=c0112060 edi=00000000 esp=c0112060 ebp=c0119f40
 cs=0008 ds=0010 es=0010 ss=8030
Kernel PANIC at ../../threads/interrupt.c:373 in intr_handler(): Unexpected interrupt
Call stack: 0xc0107189 0xc01016c5 0xc01017cb 0xc01084c7 0xc010855c 0xc010291a 0xc010a9a6 0xc0100fa8.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 21 ticks
Thread: 0 idle ticks, 21 kernel ticks, 0 user ticks
Console: 960 characters output
Keyboard: 0 keys pressed
Powering off...
